<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kn.initialmusic.mapper.SongPlaylistsMapper">
    <insert id="collectPlaylist">
        insert into userlikeplaylist(user_ID, playlist_ID)
            value (#{user_ID}, #{playlist_ID})
    </insert>
    <insert id="createNewPlaylist">
        insert into songplaylists(playlist_ID, playlist_name, create_by, playlist_introduction, playlist_cover)
            value (#{playlist_ID}, #{playlist_Name}, #{create_By}, #{playlist_Introduction}, #{playlist_Cover})
    </insert>
    <insert id="collectSongToPlaylist">
        insert into playlistdetail(playlist_ID, song_name)
            value (#{playlist_ID}, #{song_Name})
    </insert>

    <update id="changePlaylistInfo">
        update songplaylists
        set playlist_name=#{songPlaylists.playlist_Name},
            playlist_introduction=#{songPlaylists.playlist_Introduction},
            playlist_cover=#{songPlaylists.playlist_Cover}
        where playlist_ID = #{playlist_ID};
    </update>
    <update id="changeOtherPlaylistInfo">

        update userlikeplaylist
        set userlikeplaylist.playlist_name= #{new_playlist_Name}
        where userlikeplaylist.playlist_name = #{playlist_Name};
    </update>
    <delete id="deleteSongByPlaylistID">
        delete
        from playlistdetail
        where playlist_ID = #{playlist_ID}
          and song_name = #{song_Name}
    </delete>
    <delete id="deletePlaylistByUser">
        delete
        from songplaylists
        where user_ID = #{user_ID}
          and playlist_ID = #{playlist_ID};

        delete
        from playlistdetail
        where playlist_ID = #{playlist_ID}
    </delete>


    <select id="isRepeatedByID" resultType="java.lang.String">
        select playlist_ID
        from songplaylists
        where playlist_ID = #{id}
    </select>
    <select id="selectNine" resultType="com.kn.initialmusic.pojo.SongPlaylists">
        SELECT*
        FROM songplaylists
        WHERE id >= (
            SELECT floor(RAND() * (SELECT MAX(id) FROM songplaylists))
        )
        ORDER BY id
        LIMIT 9;
    </select>
    <select id="selectDetailByID" resultType="com.kn.initialmusic.pojo.SongPlaylists">
        select *
        from songplaylists
        where playlist_ID = #{playlist_ID}
    </select>
    <select id="selectCreatePlaylist" resultType="com.kn.initialmusic.pojo.SongPlaylists">
        select *
        from songplaylists
        where create_by = #{user_ID}
    </select>
    <select id="selectLikePlaylist" resultType="com.kn.initialmusic.pojo.SongPlaylists">
        select *
        from songplaylists
        where songplaylists.playlist_ID = ANY (
            select userlikeplaylist.playlist_ID
            from userlikeplaylist
            where user_ID = #{user_ID}
        )
    </select>
    <select id="selectSongByPlaylist" resultType="com.kn.initialmusic.pojo.Song">
        select *
        from song
        where song_name in (
            SELECT song_name
            from playlistDetail
            where playlist_ID = #{playlist_ID}
        )
    </select>
    <select id="ifCollectPlaylist" resultType="java.lang.String">
        select playlist_ID
        from userlikeplaylist
        where user_ID = #{user_ID}
          and playlist_ID = #{playlist_ID}
    </select>
    <select id="checkPlaylistName" resultType="java.lang.String">
        select playlist_name
        from songplaylists
        where playlist_name = #{playlist_Name}
    </select>
    <select id="selectAllPlaylists" resultType="com.kn.initialmusic.pojo.SongPlaylists">
        select *
        from songplaylists
    </select>
    <select id="ifExistSong" resultType="java.lang.String">
        select *
        from playlistdetail
        where playlist_ID = #{playlist_ID}
          and song_name = #{song_Name}
    </select>
</mapper>